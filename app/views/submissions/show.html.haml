- if current_user.is_owner_or_staff?(@submission)
  = title "#{@submission.user.full_name} - #{@assignment.name}"
- else
  = title "Peer review - #{@assignment.name}"
= content_for :head do
  = javascript_include_tag 'submissions/submissions'
  #submission-id.hidden
    = @submission.id
.row
  .col-md-9#content
    %h1.page-header
      = "Submission for " + @assignment.name
      .menu-icon-container.hidden
        %span.glyphicon.glyphicon-tasks.menu-icon
    %p
      - if @submission.finalised
        .alert.alert-success{:style => "font-weight: 600"}
          %span.glyphicon.glyphicon-check
          This submission has been finalised.
      - else
        .alert.alert-warning{:style => "font-weight: 600"}
          %span.glyphicon.glyphicon-warning-sign
          This submission is not finalised.

      - if is_late_with_extension(@submission, @assignment)
        .alert.alert-warning{:style => "font-weight: 600"}
          %span.glyphicon.glyphicon-warning-sign
          Your submission is late, but you have an extension granted until #{@assignment.latest_extension_for(@submission.user).due_date.strftime('%d/%m/%Y %I:%M%p')}
      - elsif is_late(@submission, @assignment) || is_late_without_extension(@submission, @assignment)
        .alert.alert-danger{:style => "font-weight: 600"}
          %span.glyphicon.glyphicon-warning-sign
          Your submission is late. Unless you have been granted an exception your assignment may not be marked.
    
    /# Plaintext submissions ---
    .meta
      - if current_user.is_owner_or_staff?(@submission)
        = "Submitted at: " + @submission.created_at.strftime('%d/%m/%Y %I:%M%p') + " by "
        = link_to @submission.user.full_name + " (#{@submission.user.uid})", user_path(@submission.user)
        .actions
          %a{:href => url_prefix + "/submissions/#{@submission.id}/finalise"}
            %span.glyphicon.glyphicon-check
        = link_to submission_path(@submission) + "/download" do
          %span.glyphicon.glyphicon-floppy-save
    - if @assignment.kind == "plaintext"
      = (preserve @plaintext.force_encoding("UTF-8")).html_safe

    - elsif @assignment.kind == 'zip'
      /# ZIP submissions ---
      - if @contents.blank?
        .alert.alert-danger{:style => "font-weight: 600"}
          %span.glyphicon.glyphicon-warning-sign
          No files were found in your archive.
      - else
        %h3
          Submitted files
          %span.btn.btn-xs.btn-default
            = link_to "View details", submission_contents_path(@submission)
        %p If these files do not look correct, please try re-zipping and creating a new submission. Files marked with a red cross should be removed before finalising your submission.
        %ul.list-group
          - for file in @contents.sort
            %li.list-group-item
              - if file =~ /^[.].*$/
                %span.glyphicon.glyphicon-remove.warn
              - else
                %span.glyphicon.glyphicon-ok.good
              = file.encode('UTF-8', :invalid => :replace, :undef => :replace)
          
    - unless @assignment.disable_compilation
      %h3 Results
      .results.well
        - if @submission.test_result
          = simple_format @submission.test_result.result
        - else
          // :javascript
          //   setTimeout(function(){
          //     window.location.reload();
          //   }, 2000);
          %p Compiling...
          .compile-spinner
            .rect1
            .rect2
            .rect3
            .rect4
            .rect5
    
    - if current_user.is_admin?
      %h3 Admin actions
      = form_for @submission do |f|
        = f.label :created_at, "Update timestamp"
        = f.text_field :created_at
        = f.submit "Update"
    
    %h3 Comments
    - for comment in @submission.comments
      - if comment.hidden && current_user.is_staff?
        .comment.light
          .bold
            = User.find(comment.user).full_name
            %span.glyphicon.glyphicon-eye-close
          .small.date
            = comment.created_at.strftime('%d/%m/%Y %I:%M%p')
            - if comment.attachment?
              %span.glyphicon.glyphicon-paperclip
          %p
            = comment.text
          - if comment.attachment?
            %p
              = link_to comment.attachment.url, class: "btn btn-xs btn-primary" do
                %span.glyphicon.glyphicon-download-alt
                Download
                = comment.attachment.file.filename
          - if current_user == comment.user
            .delete
              = link_to "Delete", comment_path(comment), class: "btn btn-xs btn-danger", method: :delete, data: { confirm: "Are you sure you wish to delete your comment?"}
      - elsif !comment.hidden
        .comment
          .bold
            = User.find(comment.user).full_name
            - if !comment.visible
              %span.glyphicon.glyphicon-eye-open
          .small.date
            = comment.created_at.strftime('%d/%m/%Y %I:%M%p')
            - if comment.attachment?
              %span.glyphicon.glyphicon-paperclip
          %p
            = simple_format(comment.text)
          - if comment.attachment?
            %p
              = link_to comment.attachment.url, class: "btn btn-xs btn-primary" do
                %span.glyphicon.glyphicon-download-alt
                Download
                = comment.attachment.file.filename
          - if current_user == comment.user || current_user.is_admin_or_convenor?
            .delete
              = link_to "Delete", comment_path(comment), class: "btn btn-xs btn-danger", method: :delete, data: { confirm: "Are you sure you wish to delete your comment?"}
      - else
        -next
  
    .comment-form
      = form_for @comment do |f|
        = f.text_field :submission_id, value: @submission.id, class: "hidden"
        = f.text_field :user_id, value: current_user.id, class: "hidden"
        = f.text_area :text, placeholder: "Comment", class: "form-control", style: "height: 200px"
        = f.file_field :attachment, :type => "file", id: "file-upload"
        - if current_user.is_staff?
          .hide-comment
            = f.check_box :hidden, style: "margin-top: 12px"
            = f.label :hidden, "Hide comment"
        = f.submit value: "Add comment", class: "btn btn-xs btn-primary"

  = render 'sidebar_show'
