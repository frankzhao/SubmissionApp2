:javascript
  var ready;
  
  function iso_zero(n) {
    if (n < 10) {
      return '0' + n.toString();
    } else {
      return n.toString();
    }
  }

  ready = function() {
    var date = new Date();
    console.log(date)
    
    $(".label").tooltip();
    var assignment_id, ctx, options;
    ctx = $("#chart").get(0).getContext("2d");
    ctx_daily = $("#daily-chart").get(0).getContext("2d");
    ctx_submissions = $("#submissions-chart").get(0).getContext("2d");
    ctx_comments = $("#comments-chart").get(0).getContext("2d");
    assignment_id = $("#assignment-name").attr("assignment-id");
    
    // Tabs
    $('#submission-tabs a').click(function (e) {
      e.preventDefault()
      $(this).tab('show')
    })
    
    $.get(URL_PREFIX + "/assignments/data/" + assignment_id, function(data) {
      var chart, chartdata, date, dates, k, l, labels, values, _i, _len;
      
      // Hourly data
      labels = [];
      values = [];
      for (k in data.hourly_data) {
        labels.push(k);
        values.push(data.hourly_data[k]);
      }
      dates = [];
      for (_i = 0, _len = labels.length; _i < _len; _i++) {
        l = labels[_i];
        date = Date.parse(l);
        dates.push(iso_zero(date.getDate()) + "/" + (iso_zero(date.getMonth()+1)) + " " + iso_zero(date.getHours()) + ":00");
      }
      
      // Daily data
      daily_labels = [];
      daily_values = [];
      for (k in data.daily_data) {
        daily_labels.push(k);
        daily_values.push(data.daily_data[k]);
      }
      daily_dates = [];
      for (_i = 0, _len = daily_labels.length; _i < _len; _i++) {
        l = daily_labels[_i];
        date = Date.parse(l)
        daily_dates.push(iso_zero(date.getDate()) + "/" + (iso_zero(date.getMonth()+1)));
      }
      
      chartdata = {
        labels: dates,
        datasets: [
          {
            label: "Submissions by hour",
            fillColor: "rgba(151,187,205,0.2)",
            strokeColor: "rgba(151,187,205,1)",
            pointColor: "rgba(151,187,205,1)",
            pointStrokeColor: "#fff",
            pointHighlightFill: "#fff",
            pointHighlightStroke: "rgba(151,187,205,1)",
            data: values
          }
        ]
      };
      
      daily_chartdata = {
        labels: daily_dates,
        datasets: [
          {
            label: "Submissions by day",
            fillColor: "rgba(151,187,205,0.2)",
            strokeColor: "rgba(151,187,205,1)",
            pointColor: "rgba(151,187,205,1)",
            pointStrokeColor: "#fff",
            pointHighlightFill: "#fff",
            pointHighlightStroke: "rgba(200,200,200,1)",
            data: daily_values
          }
        ]
      };
      
      var submissions_data = [
        {
          value: parseInt(data.finalised),
          color: "rgb(63,171,114)",
          highlight: "rgba(63,171,114,0.8)",
          label: "Finalised"
        },
        {
          value: parseInt(data.notfinalised),
          color: "#46BFBD",
          highlight: "#5AD3D1",
          label: "Not finalised"
        },
        {
          value: parseInt(data.nonsubmissions),
          color: "#F7464A",
          highlight: "#FF5A5E",
          label: "No submission"
      }]
      
      var comments_data = [
        {
          value: parseInt(data.commented_submissions),
          color: "rgb(63,171,114)",
          highlight: "rgba(63,171,114,0.8)",
          label: "Commented"
        },
        {
          value: parseInt(data.uncommented_submissions),
          color: "#46BFBD",
          highlight: "#5AD3D1",
          label: "Uncommented"
        }]
      
      var xlabeln = Math.round(dates.length / 4);
      options = {
        scaleShowGridLines: true,
        showXLabels: xlabeln,
        scaleGridLineColor: "rgba(0,0,0,.05)",
        scaleGridLineWidth: 0.5,
        bezierCurve: true,
        bezierCurveTension: 0.4,
        pointDot: true,
        pointDotRadius: 2,
        pointDotStrokeWidth: 1,
        pointHitDetectionRadius: 1,
        datasetStroke: true,
        datasetStrokeWidth: 2,
        datasetFill: true,
        scaleLabel: "<%= ' ' + value%>"
      };
      baroptions = {
        scaleBeginAtZero : true,
        scaleShowGridLines : true,
        scaleGridLineColor : "rgba(0,0,0,.05)",
        scaleGridLineWidth : 1,
        scaleShowHorizontalLines: true,
        scaleShowVerticalLines: true,
        barShowStroke : true,
        barStrokeWidth : 2,
        barValueSpacing : 5,
        barDatasetSpacing : 1,
        scaleLabel: "<%= ' ' + value%>",
        tooltipFontSize: 12,
        tooltipTemplate: "<%if (label){%><%=label%>: <%}%><%= value %>"
      };
      pieoptions= {
          segmentShowStroke : true,
          segmentStrokeColor : "#fff",
          segmentStrokeWidth : 2,
          percentageInnerCutout : 50,
          animationSteps : 100,
          animationEasing : "easeOutBounce",
          animateRotate : true,
          animateScale : false,
          legendTemplate : "<ul class=\"chart-legend\"><% for (var i=0; i<segments.length; i++){%><li><div class=\"legend-square\" style=\"background-color:<%=segments[i].fillColor%>\"></div><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>",
          tooltipFontSize: 12,
          tooltipTemplate: "<%if (label){%><%=label%>: <%}%><%= value %>"
      };
      
      chart = new Chart(ctx).Line(chartdata, options);
      daily_chart = new Chart(ctx_daily).Bar(daily_chartdata, baroptions);
      submissions_chart = new Chart(ctx_submissions).Doughnut(submissions_data,pieoptions);
      comments_chart = new Chart(ctx_comments).Doughnut(comments_data,pieoptions);
      var submissions_chart_legend = submissions_chart.generateLegend();
      var comments_chart_legend = comments_chart.generateLegend();
      $("#submissions-chart-legend").append(submissions_chart_legend);
      $("#comments-chart-legend").append(comments_chart_legend);
      $("#chart-spinner").addClass("hidden");
      $(".chart-title").fadeIn();
      $(".charts").height("auto");

      document.addEventListener("turbolinks:before-cache", function() {
        chart.destroy();
        daily_chart.destroy();
        submissions_chart.destroy();
        comments_chart.destroy();
        $("#submissions-chart-legend").empty();
        $("#comments-chart-legend").empty();

        $('#group-data').empty();
      });
    });
    
    $.get(URL_PREFIX + "/assignments/group_data/"+assignment_id, function(data){
      for (var group in data.data) {
        var group_data = data.data[group]
        var group_url = group_data["group_url"]
        var group_submissions_url = URL_PREFIX + group_data["group_submissions_url"]
        $("#group-data").append(
          '<tr><td><a href='+group_url+'>'+group_data.name+'</a></td>'+
          '<td><a href='+group_url+'>'+decodeURIComponent(group_data.tutor)+'</a></td>'+
          '<td><a href='+group_submissions_url+'>'+group_data.finalised+' of '+group_data.enrolled+'</a></td>'+
          '<td><a href='+group_submissions_url+'>'+group_data.submissions+' of '+group_data.enrolled+'</a></td>'+
          '</tr>'
        );
      }
      $("#groups-spinner").addClass("hidden");
      $("#group-data").height("auto");
      $("#group-data th").fadeIn();
    });
  };
  
  var datatables_init;
  datatables_init = function() {
    $("#allsubmissions-table").destroy();
  }

  $(document).ready(ready);
  $(document).on('page:change', datatables_init);